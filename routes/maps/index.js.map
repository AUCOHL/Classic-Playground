{"version":3,"sources":["index.coffee"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"/source/","sourcesContent":["express = require 'express'\nrouter = express.Router()\n\npath = require 'path'\nfs = require 'fs'\nshortid = require 'shortid'\nmkdirp = require 'mkdirp'\nrmdir = require 'rimraf'\nasync = require 'async'\n\nSynthesizer = require '../modules/synthesizer'\nSimulator = require '../modules/simulator'\n\n\nrouter.post '/compile', (req, res, next) ->\n\tsynthesisFiles = req.body.files\n\tstdcell = req.body.stdcell\n\toptions = req.body.options\n\tnetlistName = req.body.name\n\ttopModule = req.body.topModule\n\ttopModuleFileId = req.body.topModuleFileId\n\ttopModuleContent = ''\n\tsynthesisFolderName = \"#{(new Date()).getTime()}_#{shortid.generate()}_#{(Math.random().toString().slice(2))}\"\n\tsynthesisFolderPath = path.join process.cwd(), \"temp/#{synthesisFolderName}\"\n\tmkdirp synthesisFolderPath, mode: 0o0666, (err) ->\n\t\tif err\n\t\t\tconsole.error err\n\t\t\treturn res.status(500).json error: 'An error occurred while creating the repository structure.'\n\t\telse\n\t\t\twrittenFiles = []\n\t\t\tasync.eachSeries synthesisFiles, ((file, callback) ->\n\t\t\t\tfileFolderPath = path.join synthesisFolderPath, \"#{file.name}_#{(new Date()).getTime()}_#{shortid.generate()}_#{(Math.random().toString().slice(2))}\"\n\t\t\t\tmkdirp fileFolderPath, mode: 0o0666, (err) ->\n\t\t\t\t\tif err\n\t\t\t\t\t\tconsole.error err\n\t\t\t\t\t\treturn callback 'An error occurred while creating the repository structure.'\n\t\t\t\t\telse\n\t\t\t\t\t\tfilePath = path.join fileFolderPath, file.name\n\t\t\t\t\t\tfs.writeFile filePath, file.content, (err) ->\n\t\t\t\t\t\t\tif err\n\t\t\t\t\t\t\t\tconsole.error err\n\t\t\t\t\t\t\t\treturn callback 'An error occurred while creating the repository structure.'\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\twrittenFiles.push filePath\n\t\t\t\t\t\t\t\tif file.id is topModuleFileId\n\t\t\t\t\t\t\t\t\ttopModuleContent = file.content\n\t\t\t\t\t\t\t\tcallback()\n\t\t\t), (err) ->\n\t\t\t\tif err\n\t\t\t\t\treturn res.status(500).json err\n\t\t\t\telse\n\t\t\t\t\tnetlistFolderPath = path.join synthesisFolderPath, \"#{netlistName}_#{(new Date()).getTime()}_#{shortid.generate()}_#{(Math.random().toString().slice(2))}\"\n\t\t\t\t\tmkdirp netlistFolderPath, mode: 0o0666, (err) ->\n\t\t\t\t\t\tif err\n\t\t\t\t\t\t\tconsole.error err\n\t\t\t\t\t\t\treturn res.status(500).json error: 'An error occurred while creating the repository structure.'\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tnetlistPath = path.join netlistFolderPath, netlistName\n\n\t\t\t\t\t\t\tsynthOptions =\n\t\t\t\t\t\t\t\tflatten: yes\n\t\t\t\t\t\t\t\tpurge: yes\n\t\t\t\t\t\t\t\tproc: yes\n\t\t\t\t\t\t\t\tmemorymap: yes\n\t\t\t\t\t\t\tif options?\n\t\t\t\t\t\t\t\tif options.flatten? and not options.flatten\n\t\t\t\t\t\t\t\t\tsynthOptions.flatten = no\n\t\t\t\t\t\t\t\tif options.purge? and not options.purge\n\t\t\t\t\t\t\t\t\tsynthOptions.purge = no\n\t\t\t\t\t\t\t\tif options.proc? and not options.proc\n\t\t\t\t\t\t\t\t\tsynthOptions.proc = no\n\t\t\t\t\t\t\t\tif options.memorymap? and not options.memorymap\n\t\t\t\t\t\t\t\t\tsynthOptions.memorymap = no\n\t\t\t\t\t\t\tSynthesizer.synthesize synthesisFolderPath, writtenFiles, topModule, topModuleContent, stdcell, synthOptions, netlistPath, (err, synthContent, synthLog) ->\n\t\t\t\t\t\t\t\trmdir synthesisFolderPath, (err) -> console.error err if err\n\t\t\t\t\t\t\t\tif err\n\t\t\t\t\t\t\t\t\treturn res.status(500).json err\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tif synthLog.errors.length is 0\n\t\t\t\t\t\t\t\t\t\treturn res.status(200).json\n\t\t\t\t\t\t\t\t\t\t\tnetlist: synthContent\n\t\t\t\t\t\t\t\t\t\t\tlog: synthLog\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\treturn res.status(200).json\n\t\t\t\t\t\t\t\t\t\t\t\t\tnetlist: null\n\t\t\t\t\t\t\t\t\t\t\t\t\tlog: synthLog\n\n\nrouter.post '/simulate', (req, res, next) ->\n\tsimulationFiles = req.body.files\n\tvcdName = req.body.name\n\ttestbenchId = req.body.testbenchId\n\ttestbenchPath = ''\n\tdumpName = ''\n\tsimulationFolderName = \"#{(new Date()).getTime()}_#{shortid.generate()}_#{(Math.random().toString().slice(2))}\"\n\tsimulationFolderPath = path.join process.cwd(), \"temp/#{simulationFolderName}\"\n\treverseMap = {}\n\tmkdirp simulationFolderPath, mode: 0o0666, (err) ->\n\t\tif err\n\t\t\tconsole.error err\n\t\t\treturn res.status(500).json error: 'An error occurred while creating the repository structure.'\n\t\telse\n\t\t\twrittenFiles = []\n\t\t\tasync.eachSeries simulationFiles, ((file, callback) ->\n\t\t\t\tfileFolderPath = path.join simulationFolderPath, \"#{file.name}_#{(new Date()).getTime()}_#{shortid.generate()}_#{(Math.random().toString().slice(2))}\"\n\t\t\t\tmkdirp fileFolderPath, mode: 0o0666, (err) ->\n\t\t\t\t\tif err\n\t\t\t\t\t\tconsole.error err\n\t\t\t\t\t\treturn callback 'An error occurred while creating the repository structure.'\n\t\t\t\t\telse\n\t\t\t\t\t\tfilePath = path.join fileFolderPath, file.name\n\t\t\t\t\t\treverseMap[filePath] =\n\t\t\t\t\t\t\tsourceName: file.name\n\t\t\t\t\t\t\tsourceId: file.id\n\t\t\t\t\t\tif file.id is testbenchId\n\t\t\t\t\t\t\ttestbenchPath = filePath\n\t\t\t\t\t\t\tdumpName = \"#{file.name}_#{Date.now()}.vcd\"\n\t\t\t\t\t\t\tmoduleRegEx = /([\\s\\S]*?)(module)([\\s\\S]+?)(endmodule)([\\s\\S]*)/gm\n\t\t\t\t\t\t\tmoduleRegEx = /([\\s\\S]*?)(module)([\\s\\S]+?)(\\([\\s\\S]*\\))?;([\\s\\S]+?)(endmodule)([\\s\\S]*)/gm\n\t\t\t\t\t\t\tmatches = moduleRegEx.exec file.content\n\t\t\t\t\t\t\tif not matches?\n\t\t\t\t\t\t\t\treturn callback error: 'The testbench does not contain any module.'\n\t\t\t\t\t\t\tfinishAppend = \"\"\n\t\t\t\t\t\t\tif not /[^\\s\\/*]\\s*\\$finish/.test matches[5]\n\t\t\t\t\t\t\t\tfinishAppend = \"\\n#1000;\\n$finish;\\n\"\n\t\t\t\t\t\t\tfile.content = \"#{matches[1]}#{matches[2]} #{matches[3]} #{if matches[4] then matches[4] else ''};#{matches[5]}\\ninitial begin $dumpfile(\\\"#{dumpName}\\\"); $dumpvars(0, #{matches[3]}); #{finishAppend}end\\n#{matches[6]}#{matches[7]}\"\n\t\t\t\t\t\tfs.writeFile filePath, file.content, (err) ->\n\t\t\t\t\t\t\tif err\n\t\t\t\t\t\t\t\tconsole.error err\n\t\t\t\t\t\t\t\treturn callback 'An error occurred while creating the repository structure.'\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\twrittenFiles.push filePath\n\t\t\t\t\t\t\t\tcallback()\n\t\t\t), (err) ->\n\t\t\t\tif err\n\t\t\t\t\treturn res.status(500).json err\n\t\t\t\telse\n\t\t\t\t\tvcdFilePath = path.join simulationFolderPath, \"#{vcdName}_#{(new Date()).getTime()}_#{shortid.generate()}_#{(Math.random().toString().slice(2))}\"\n\t\t\t\t\tmkdirp vcdFilePath, mode: 0o0666, (err) ->\n\t\t\t\t\t\tif err\n\t\t\t\t\t\t\tconsole.error err\n\t\t\t\t\t\t\treturn res.status(500).json error: 'An error occurred while creating the repository structure.'\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tvcdPath = path.join vcdFilePath, vcdName\n\t\t\t\t\t\t\tSimulator.simulate simulationFolderPath, writtenFiles, testbenchPath, reverseMap, dumpName, (err, simulationErrors, simulationWarnings, simulationLog, vcd) ->\n\t\t\t\t\t\t\t\trmdir simulationFolderPath, (err) -> console.error err if err\n\t\t\t\t\t\t\t\tif err\n\t\t\t\t\t\t\t\t\treturn res.status(500).json err\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tif not vcd? or vcd.trim() is ''\n\t\t\t\t\t\t\t\t\t\treturn res.json\n\t\t\t\t\t\t\t\t\t\t\terrors: simulationErrors\n\t\t\t\t\t\t\t\t\t\t\twarnings: simulationWarnings\n\t\t\t\t\t\t\t\t\t\t\tlog: simulationLog\n\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\tSimulator.generateWave vcd, (err, wave) ->\n\t\t\t\t\t\t\t\t\t\t\tif err\n\t\t\t\t\t\t\t\t\t\t\t\tres.status(500).json err\n\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\tif simulationLog.length\n\t\t\t\t\t\t\t\t\t\t\t\t\tif /^\\s*VCD info\\:\\s*dumpfile/i.test simulationLog[simulationLog.length - 1]\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsimulationLog.pop()\n\t\t\t\t\t\t\t\t\t\t\t\tres.status(200).json\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors: simulationErrors\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twarnings: simulationWarnings\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlog: simulationLog\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twave: wave\nrouter.get '/stdcell', (req, res, next) ->\n\tstdcellsPath = path.join process.cwd(), 'modules/stdcells'\n\tfs.readdir stdcellsPath, (err, stdcellFiles) ->\n\t\tif err\n\t\t\tconsole.error err\n\t\t\treturn res.status(500).json error: 'An error has occurred while attempting to retrieve the standard cell library.'\n\t\telse\n\t\t\tres.status(200).json stdcell: stdcellFiles\n\nrouter.get '/', (req, res, next) ->\n\treturn res.render 'index', title: 'Workspace'\n\nmodule.exports = router\n"]}