{"version":3,"sources":["synthesizer.coffee"],"names":[],"mappings":"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","file":"synthesizer.js","sourceRoot":"/source/","sourcesContent":["fs = require 'fs'\npath = require 'path'\nexec = require('child_process').exec;\nshortid = require 'shortid'\nrmdir = require 'rimraf'\nmathjs = require 'mathjs'\n\nParser = require './parser'\n\nsynthesize = (filesPath, filesArray, topModule, topModuleContent, stdcell, synthOptions, synthName = 'synth.v', cb) ->\n\n\tParser.moduleExistsInFile topModuleContent, topModule, (err, exists) ->\n\t\tif err\n\t\t\treturn cb err\n\t\telse if not exists\n\t\t\treturn cb error: \"Module '#{topModule}' does not exist.\"\n\t\telse\n\t\t\tstdcellOpt = ''\n\t\t\tflattenOpt = ''\n\t\t\tpurgeOpt = ''\n\t\t\tprocOpt = ''\n\t\t\tmemorymapOpt = ''\n\n\t\t\tif synthOptions.flatten\n\t\t\t\tflattenOpt = \"-p flatten\"\n\t\t\tif synthOptions.purge\n\t\t\t\tpurgeOpt = \"-p 'opt_clean -purge'\"\n\t\t\tif synthOptions.proc\n\t\t\t\tprocOpt = \"-p proc\"\n\t\t\tif synthOptions.memorymap\n\t\t\t\tmemorymapOpt = \"-p memory_collect -p memory_map\"\n\n\t\t\tstdcellPath = ''\n\t\t\tif stdcell? and stdcell.trim() isnt ''\n\t\t\t\tstdcellPath = path.join process.cwd(), \"modules/stdcells/#{stdcell}\"\n\t\t\t\ttry\n\t\t\t\t\tstat = fs.lstatSync stdcellPath\n\t\t\t\t\tabcPath = stdcellPath\n\t\t\t\t\tstdcellOpt = \"-p 'dfflibmap -liberty #{stdcellPath}' -p 'abc -liberty #{abcPath}'\"\n\t\t\t\tcatch e\n\t\t\t\t\tconsole.error e\n\t\t\t\t\treturn cb error: \"Cannot find the standard cell library #{stdcell}\"\n\t\t\telse\n\t\t\t\treturn cb error: 'Missing standard cell library file.'\n\t\t\targs = for file in filesArray\n\t\t\t\t\"-p 'read_verilog #{file}'\"\n\t\t\targs = args.join(' ')\n\n\t\t\tcmd = \"yosys -q #{args} -p 'hierarchy -check -top #{topModule}' #{procOpt} -p opt -p techmap -p opt #{stdcellOpt} -p clean #{memorymapOpt} #{flattenOpt} #{purgeOpt}  -p 'write_verilog -noattr -noexpr #{synthName}'\"\n\t\t\tconsole.log cmd\n\t\t\texec cmd,\n\t\t\t\tcwd: filesPath\n\t\t\t\tmaxBuffer: 5000 * 1024\n\t\t\t\ttimeout: 30000,\n\t\t\t\t(err, stdout, stderr) ->\n\t\t\t\t\tif err\n\t\t\t\t\t\tif not stderr\n\t\t\t\t\t\t\tconsole.error err\n\t\t\t\t\t\t\treturn cb error: \"An error occurred while synthesizing.\"\n\t\t\t\t\tif stdout\n\t\t\t\t\t\tif process.env.NODE_ENV is 'development'\n\t\t\t\t\t\t\tconsole.log 'stdout:'\n\t\t\t\t\t\t\tconsole.log stdout\n\t\t\t\t\terrors = []\n\t\t\t\t\twarnings = []\n\t\t\t\t\tif stderr\n\t\t\t\t\t\terrorLines = stderr.split '\\n'\n\t\t\t\t\t\tfor line in errorLines\n\t\t\t\t\t\t\tcontinue if line.trim() is '' or /^i give up\\.$/i.test(line.trim())\n\t\t\t\t\t\t\tif /warning *\\: *([\\s\\S]*)/im.test(line)\n\t\t\t\t\t\t\t\twarningEntry = {}\n\t\t\t\t\t\t\t\twarningEntry.file = null\n\t\t\t\t\t\t\t\twarningEntry.message = line\n\t\t\t\t\t\t\t\twarningEntry.line = 0\n\t\t\t\t\t\t\t\twarnings.push warningEntry\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\terrorEntry = {}\n\t\t\t\t\t\t\t\terrorEntry.file = null\n\t\t\t\t\t\t\t\terrorEntry.message = line\n\t\t\t\t\t\t\t\terrorEntry.line = 0\n\t\t\t\t\t\t\t\terrors.push errorEntry\n\t\t\t\t\t\tif errors.length > 0\n\t\t\t\t\t\t\treturn cb null, '',\n\t\t\t\t\t\t\t\t\t\t\terrors: errors\n\t\t\t\t\t\t\t\t\t\t\twarnings: warnings\n\n\n\t\t\t\t\tfs.readFile synthName, 'UTF-8', (err, content) ->\n\t\t\t\t\t\tif err\n\t\t\t\t\t\t\tcb error: 'Failed to read synthesized file.'\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn cb null, content,\n\t\t\t\t\t\t\t\t\t\t\terrors: errors\n\t\t\t\t\t\t\t\t\t\t\twarnings: warnings\n\nmodule.exports =\n\tsynthesize: synthesize\n"]}