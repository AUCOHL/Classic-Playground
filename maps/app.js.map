{"version":3,"sources":["app.coffee"],"names":[],"mappings":"AAAA,IAAA;;AAAA,OAAA,GAAU,OAAA,CAAQ,SAAR;;AACV,IAAA,GAAO,OAAA,CAAQ,MAAR;;AACP,OAAA,GAAU,OAAA,CAAQ,eAAR;;AACV,MAAA,GAAS,OAAA,CAAQ,QAAR;;AACT,YAAA,GAAe,OAAA,CAAQ,eAAR;;AACf,UAAA,GAAa,OAAA,CAAQ,aAAR;;AACb,MAAA,GAAS,OAAA,CAAQ,gBAAR;;AACT,KAAA,GAAQ,OAAA,CAAQ,QAAR;;AAER,GAAA,GAAM,OAAA,CAAA;;AAEN,GAAG,CAAC,GAAJ,CAAQ,OAAR,EAAiB,IAAI,CAAC,IAAL,CAAU,SAAV,EAAqB,OAArB,CAAjB;;AACA,GAAG,CAAC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAIA,GAAG,CAAC,GAAJ,CAAQ,MAAA,CAAO,KAAP,CAAR;;AACA,GAAG,CAAC,GAAJ,CAAQ,UAAU,CAAC,IAAX,CAAA,CAAR;;AACA,GAAG,CAAC,GAAJ,CAAQ,UAAU,CAAC,UAAX,CAAsB;EAAA,QAAA,EAAU,KAAV;CAAtB,CAAR;;AACA,GAAG,CAAC,GAAJ,CAAQ,YAAA,CAAA,CAAR;;AACA,GAAG,CAAC,GAAJ,CAAQ,OAAO,EAAC,MAAD,EAAP,CAAe,IAAI,CAAC,IAAL,CAAU,SAAV,EAAqB,QAArB,CAAf,CAAR;;AACA,GAAG,CAAC,GAAJ,CAAQ,GAAR,EAAa,MAAb;;AAEA,KAAA,CAAM,QAAN,EAAgB,SAAC,KAAD;EACf,IAAG,KAAH;AACC,UAAM,MADP;;AADe,CAAhB;;AAKA,GAAG,CAAC,GAAJ,CAAQ,SAAC,GAAD,EAAM,GAAN,EAAW,IAAX;AACJ,MAAA;EAAA,GAAA,GAAU,IAAA,KAAA,CAAM,WAAN;EACV,GAAG,CAAC,MAAJ,GAAa;EACb,IAAA,CAAK,GAAL;AAHI,CAAR;;AASA,IAAG,GAAG,CAAC,GAAJ,CAAQ,KAAR,CAAA,KAAkB,aAArB;EACI,GAAG,CAAC,GAAJ,CAAQ,SAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,IAAhB;IACJ,GAAG,CAAC,MAAJ,CAAW,GAAG,CAAC,MAAJ,IAAc,GAAzB;IACA,GAAG,CAAC,MAAJ,CAAW,OAAX,EACI;MAAA,OAAA,EAAS,GAAG,CAAC,OAAb;MACA,KAAA,EAAO,GADP;KADJ;EAFI,CAAR,EADJ;;;AAUA,GAAG,CAAC,GAAJ,CAAQ,SAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,IAAhB;EACJ,GAAG,CAAC,MAAJ,CAAW,GAAG,CAAC,MAAJ,IAAc,GAAzB;EACA,GAAG,CAAC,MAAJ,CAAW,OAAX,EACI;IAAA,OAAA,EAAS,GAAG,CAAC,OAAb;IACA,KAAA,EAAO,EADP;GADJ;AAFI,CAAR;;AAMA,MAAM,CAAC,OAAP,GAAiB","file":"app.js","sourceRoot":"/source/","sourcesContent":["express = require 'express'\npath = require 'path'\nfavicon = require 'serve-favicon'\nlogger = require 'morgan'\ncookieParser = require 'cookie-parser'\nbodyParser = require 'body-parser'\nroutes = require './routes/index'\nrmdir = require 'rimraf'\n\napp = express()\n# view engine setup\napp.set 'views', path.join(__dirname, 'views')\napp.set 'view engine', 'ejs'\n\n# uncomment after placing your favicon in /public\n#app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use logger('dev')\napp.use bodyParser.json()\napp.use bodyParser.urlencoded(extended: false)\napp.use cookieParser()\napp.use express.static(path.join(__dirname, 'public'))\napp.use '/', routes\n\nrmdir 'temp/*', (error)->\n\tif error\n\t\tthrow error\n\n# catch 404 and forward to error handler\napp.use (req, res, next) ->\n    err = new Error('Not Found')\n    err.status = 404\n    next err\n    return\n\n# error handlers\n# development error handler\n# will print stacktrace\nif app.get('env') == 'development'\n    app.use (err, req, res, next) ->\n        res.status err.status or 500\n        res.render 'error',\n            message: err.message\n            error: err\n        return\n\n# production error handler\n# no stacktraces leaked to user\napp.use (err, req, res, next) ->\n    res.status err.status or 500\n    res.render 'error',\n        message: err.message\n        error: {}\n    return\nmodule.exports = app\n"]}